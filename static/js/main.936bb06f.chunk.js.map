{"version":3,"sources":["assets/images/hero-image.svg","assets/images/menu-open.svg","assets/images/menu-close.svg","components/shared/Button/index.js","components/shared/Button/Button.js","components/shared/Title/index.js","components/shared/Title/Title.js","components/shared/Subtitle/index.js","components/shared/Subtitle/Subtitle.js","components/shared/HeroImage/index.js","components/shared/HeroImage/HeroImage.js","components/shared/GameButton/GameButton.js","components/shared/GameButton/index.js","components/shared/ButtonIcon/helper.js","components/shared/ButtonIcon/index.js","components/shared/ButtonIcon/ButtonIcon.js","components/GamePreview/index.js","components/GamePreview/GamePreview.js","components/GamePreview/helper.js","components/Game/helper.js","components/Game/index.js","components/Game/Game.js","containers/App/reducer.js","containers/App/index.js","containers/App/App.js","containers/App/helper.js","constants/index.js","index.js"],"names":["module","exports","Button","props","text","onButtonClick","onClick","className","type","Title","size","Subtitle","HeroImage","src","heroImage","alt","GameButton","status","value","id","defaultProps","getGamePreviewClasses","menuOpenIcon","menuCloseIcon","ButtonIcon","getButtonIcon","GameStart","earned","onGameStart","titleText","buttonText","subtitleText","getGamePreviewText","gamePreviewClasses","getGameOptionButtonStatus","currentOptionId","userAnswerId","gameStatus","correctAnswerId","Game","levels","currentLevel","currentQuestion","currency","onAnswerSelect","userAnswer","useState","sidebarVisible","setSidebarVisible","sidebarClasses","getSidebarClasses","gameSteps","map","level","index","money","key","levelIndex","currentLevelIndex","currentQuestionOptions","options","answer","answers","question","reducer","state","action","currentPage","App","initialState","config","questions","createInitialState","useReducer","dispatch","onAnswerCheck","setTimeout","isLastQuestion","length","isCorrectAnswer","onAnswerResult","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.936bb06f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero-image.276b2ba6.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-open.ef43c181.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-close.51226034.svg\";","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nconst Button = (props) => {\n  const { text, onButtonClick } = props;\n  return <button onClick={onButtonClick} className=\"main-button\" type=\"button\">{text}</button>;\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Title from './Title';\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Title.css';\n\nconst Title = (props) => {\n  const { text, size } = props;\n  return <h1 className={`main-title main-title--${size}`}>{text}</h1>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import Subtitle from './Subtitle';\n\nexport default Subtitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Subtitle.css';\n\nconst Subtitle = (props) => {\n  const { text } = props;\n  return <h2 className=\"main-subtitle\">{text}</h2>;\n};\n\nSubtitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Subtitle;\n","import HeroImage from './HeroImage';\n\nexport default HeroImage;\n","import React from 'react';\n\nimport heroImage from '../../../assets/images/hero-image.svg';\nimport './HeroImage.css';\n\nconst HeroImage = () => <img className=\"hero-image\" src={heroImage} alt=\"hand-up\" />;\n\nexport default HeroImage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GameButton.css';\n\nconst GameButton = (props) => {\n  const {\n    type, status, value, id, onButtonClick,\n  } = props;\n  return (\n    <button\n      onClick={onButtonClick}\n      className={`game-button game-button--${type} game-button--${status}`}\n      type=\"button\"\n    >\n      <div className=\"game-button__wrapper\">\n        <p>\n          {id && <span className=\"game-button-id\">{id}</span>}\n          {value}\n        </p>\n      </div>\n    </button>\n  );\n};\n\nGameButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  status: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  onButtonClick: PropTypes.func,\n};\n\nGameButton.defaultProps = {\n  id: null,\n  status: 'inactive',\n  onButtonClick: () => {},\n};\n\nexport default GameButton;\n","import GameButton from './GameButton';\n\nexport default GameButton;\n","import menuOpenIcon from '../../../assets/images/menu-open.svg';\nimport menuCloseIcon from '../../../assets/images/menu-close.svg';\n\nconst getGamePreviewClasses = (type) => {\n  switch (type) {\n    case 'menuOpen':\n      return { src: menuOpenIcon, alt: 'Open menu' };\n    case 'menuClose':\n      return { src: menuCloseIcon, alt: 'Close menu' };\n    default:\n      return null;\n  }\n};\n\nexport default getGamePreviewClasses;\n","import ButtonIcon from './ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport getButtonIcon from './helper';\n\nimport './ButtonIcon.css';\n\nconst ButtonIcon = (props) => {\n  const { type, onButtonClick } = props;\n  const { src, alt } = getButtonIcon(type);\n\n  return (\n    <button onClick={onButtonClick} type=\"button\" className=\"button-icon\">\n      <img src={src} alt={alt} />\n    </button>\n  );\n};\n\nButtonIcon.propTypes = {\n  type: PropTypes.string.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonIcon;\n","import GameStart from './GamePreview';\n\nexport default GameStart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  HeroImage,\n  Subtitle,\n} from '../shared';\nimport { getGamePreviewText, getGamePreviewClasses } from './helper';\n\nimport './GamePreview.css';\n\nconst GamePreview = (props) => {\n  const { type, earned, onGameStart } = props;\n\n  const { titleText, subtitleText, buttonText } = getGamePreviewText(type, earned);\n  const gamePreviewClasses = getGamePreviewClasses(type);\n\n  return (\n    <div className={`game-preview ${gamePreviewClasses}`}>\n      <div className=\"game-preview__wrapper\">\n        <div className=\"game-preview__hero-image\">\n          <HeroImage />\n        </div>\n        <div className=\"game-preview__description\">\n          {subtitleText && <Subtitle text={subtitleText} />}\n          <Title text={titleText} size=\"large\" />\n          <Button onButtonClick={onGameStart} text={buttonText} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nGamePreview.propTypes = {\n  type: PropTypes.string.isRequired,\n  earned: PropTypes.string.isRequired,\n  onGameStart: PropTypes.func.isRequired,\n};\n\nexport default GamePreview;\n","export const getGamePreviewText = (type, earned) => {\n  switch (type) {\n    case 'gameStart':\n      return ({\n        titleText: 'Who wants to be a millionaire?',\n        buttonText: 'Start',\n      });\n    case 'gameOver':\n      return ({\n        titleText: `${earned} earned`,\n        subtitleText: 'Total score:',\n        buttonText: 'Try again',\n      });\n    default:\n      return null;\n  }\n};\n\nexport const getGamePreviewClasses = (type) => {\n  switch (type) {\n    case 'gameStart':\n      return 'game-preview--start';\n    case 'gameOver':\n      return 'game-preview--over';\n    default:\n      return null;\n  }\n};\n","const getSidebarClasses = (sidebarVisible) => (sidebarVisible ? 'game-sidebar' : 'game-sidebar game-sidebar--hidden');\n\nconst getGameStepButtonStatus = (levelIndex, currentLevelIndex) => {\n  if (currentLevelIndex === levelIndex) {\n    return 'active';\n  } if (currentLevelIndex > levelIndex) {\n    return 'finished';\n  }\n  return 'inactive';\n};\n\nconst getGameOptionButtonStatus = (currentOptionId, userAnswerId, gameStatus, correctAnswerId) => {\n  if (currentOptionId !== userAnswerId) {\n    return 'inactive';\n  }\n  switch (gameStatus) {\n    case 'select':\n      return 'inactive';\n    case 'check':\n      return 'selected';\n    case 'result':\n      return correctAnswerId === userAnswerId ? 'correct' : 'wrong';\n    default:\n      return null;\n  }\n};\n\nexport { getSidebarClasses, getGameStepButtonStatus, getGameOptionButtonStatus };\n","import Game from './Game';\n\nexport default Game;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Game.css';\n\nimport { GameButton, Title, ButtonIcon } from '../shared';\nimport { getGameStepButtonStatus, getSidebarClasses, getGameOptionButtonStatus } from './helper';\n\nconst Game = (props) => {\n  const {\n    levels, currentLevel, currentQuestion, currency, onAnswerSelect, gameStatus, userAnswer,\n  } = props;\n  const [sidebarVisible, setSidebarVisible] = useState(false);\n\n  const onSidebarOpen = () => setSidebarVisible(true);\n  const onSidebarClose = () => setSidebarVisible(false);\n\n  const sidebarClasses = getSidebarClasses(sidebarVisible);\n\n  const gameSteps = levels.map((level, index) => (\n    <GameButton\n      type=\"step\"\n      value={currency + level.money}\n      key={level.id}\n      status={getGameStepButtonStatus(index, currentLevel)}\n    />\n  ));\n  const currentQuestionOptions = currentQuestion.options.map(({ id, answer }) => {\n    const onGameButtonClick = () => onAnswerSelect(id);\n    return (\n      <GameButton\n        onButtonClick={gameStatus === 'select' ? onGameButtonClick : null}\n        status={getGameOptionButtonStatus(id, userAnswer, gameStatus, currentQuestion.answers[0])}\n        type=\"option\"\n        id={id}\n        value={answer}\n        key={id}\n      />\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-main\">\n        <ButtonIcon type=\"menuOpen\" onButtonClick={onSidebarOpen} />\n        <Title size=\"medium\" text={currentQuestion.question} />\n        <div className=\"game-options\">\n          {currentQuestionOptions}\n        </div>\n      </div>\n      <div className={sidebarClasses}>\n        <ButtonIcon type=\"menuClose\" onButtonClick={onSidebarClose} />\n        <div className=\"game-steps\">\n          {gameSteps}\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nGame.propTypes = {\n  levels: PropTypes.array.isRequired,\n  currency: PropTypes.string.isRequired,\n  currentLevel: PropTypes.number.isRequired,\n  currentQuestion: PropTypes.object.isRequired,\n  onAnswerSelect: PropTypes.func.isRequired,\n  gameStatus: PropTypes.string.isRequired,\n  userAnswer: PropTypes.string.isRequired,\n};\n\nexport default Game;\n","const reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_GAME_PAGE':\n      return ({\n        ...state,\n        currentPage: 'game',\n        earned: 0,\n        currentLevel: 0,\n        gameStatus: 'select',\n        userAnswer: 'answer',\n\n      });\n    case 'SET_SELECT_ANSWER':\n      return { ...state, userAnswer: action.userAnswerId, gameStatus: 'check' };\n    case 'SET_CHECK_ANSWER':\n      return { ...state, gameStatus: 'result' };\n    case 'SET_GAME_OVER':\n      return ({\n        ...state,\n        currentPage: 'gameOver',\n      });\n    case 'SET_GAME_WIN':\n      return ({\n        ...state,\n        earned: state.currency + state.levels[state.currentLevel].money,\n        currentPage: 'gameOver',\n      });\n    case 'SET_NEXT_QUESTION':\n      return ({\n        ...state,\n        earned: state.currency + state.levels[state.currentLevel].money,\n        currentLevel: state.currentLevel + 1,\n        gameStatus: 'select',\n        userAnswer: null,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import App from './App';\n\nexport default App;\n","import React, { useReducer } from 'react';\nimport { Game, GamePreview } from '../../components';\nimport { GAME_CHECK_ANSWER_DELAY, GAME_RESULT_DELAY } from '../../constants';\nimport reducer from './reducer';\nimport { createInitialState } from './helper';\n\nimport config from '../../config/index.json';\n\nimport '../../constants/constants.css';\nimport './App.css';\n\nconst App = () => {\n  const initialState = createInitialState(config);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    currentPage, levels, questions, currency, currentLevel, userAnswer, earned, gameStatus,\n  } = state;\n\n  const setGamePage = () => dispatch({ type: 'SET_GAME_PAGE' });\n\n  const onAnswerResult = (userAnswerId) => {\n    setTimeout(() => {\n      const isLastQuestion = currentLevel + 1 >= levels.length;\n      const isCorrectAnswer = userAnswerId === questions[currentLevel].answers[0];\n      if (isCorrectAnswer && isLastQuestion) {\n        dispatch({ type: 'SET_GAME_WIN' });\n      } else if (!isCorrectAnswer) {\n        dispatch({ type: 'SET_GAME_OVER' });\n      } else {\n        dispatch({ type: 'SET_NEXT_QUESTION' });\n      }\n    }, GAME_RESULT_DELAY);\n  };\n\n  const onAnswerCheck = (userAnswerId) => {\n    setTimeout(() => {\n      dispatch({ type: 'SET_CHECK_ANSWER' });\n      onAnswerResult(userAnswerId);\n    }, GAME_CHECK_ANSWER_DELAY);\n  };\n\n  const onAnswerSelect = (userAnswerId) => {\n    dispatch({ type: 'SET_SELECT_ANSWER', userAnswerId });\n    onAnswerCheck(userAnswerId);\n  };\n\n  return (\n\n    <div className=\"app\">\n      {currentPage === 'game'\n        ? (\n          <Game\n            levels={levels || []}\n            currentLevel={currentLevel}\n            currentQuestion={questions[currentLevel] || {}}\n            currency={currency}\n            userAnswer={userAnswer}\n            gameStatus={gameStatus}\n            onAnswerSelect={onAnswerSelect}\n          />\n        )\n        : <GamePreview type={currentPage} onGameStart={setGamePage} earned={earned} />}\n    </div>\n\n  );\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nexport const createInitialState = (config) => {\n  const { levels, questions, currency } = config;\n  const initialState = {\n    currentPage: 'gameStart',\n    gameStatus: 'select',\n    levels,\n    questions,\n    currency,\n    currentLevel: 0,\n    userAnswer: 'answer',\n    earned: '0',\n  };\n\n  return initialState;\n};\n","export const GAME_CHECK_ANSWER_DELAY = 2000;\nexport const GAME_RESULT_DELAY = 2000;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}